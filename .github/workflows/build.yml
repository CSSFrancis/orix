name: build

on: [push, pull_request]

jobs:
  code:
    name: code style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: psf/black@stable
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: isort/isort-action@master
        with:
          configuration: --profile black --filter-files --force-sort-within-sections --check-only --diff

      - name: Install Black with Jupyter extension
        run: pip install black[jupyter]

      - name: Check code style of Jupyter notebooks
        run: black doc/*.ipynb --check

  # Make sure all necessary files will be included in a release
  manifest:
    name: check manifest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2

      - name: Install dependencies
        run: pip install manifix

      - name: Check MANIFEST.in file
        run: python setup.py manifix

  build-with-pip:
    name: ${{ matrix.os }}-py${{ matrix.python-version }}${{ matrix.LABEL }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    env:
      MPLBACKEND: agg
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.9, "3.10"]
        include:
          - os: ubuntu-latest
            python-version: 3.7
            OLDEST_SUPPORTED_VERSION: true
            DEPENDENCIES: diffpy.structure==3  matplotlib==3.3
            LABEL: -oldest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python and pip versions
        run: python -V; pip -V

      - name: Install depedencies and package
        shell: bash
        run: pip install -U -e .'[doc, tests]'

      - name: Install oldest supported version
        if: ${{ matrix.OLDEST_SUPPORTED_VERSION }}
        run: pip install ${{ matrix.DEPENDENCIES }}

      - name: Display package versions
        run: pip list

      - name: Run tests
        run: pytest --cov=orix --pyargs orix

      - name: Generate line coverage
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: coverage report --show-missing

      - name: Upload coverage to Coveralls
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: AndreMiras/coveralls-python-action@develop
        with:
          parallel: true

  coveralls-finish:
    needs: build-with-pip
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls finished
        uses: AndreMiras/coveralls-python-action@develop
        with:
          parallel-finished: true
