import pytest
import numpy as np

from texpy.quaternion.orientation_region import OrientationRegion
from texpy.quaternion.symmetry import Symmetry
from texpy.quaternion.rotation import Rotation


cs_222 = np.array([
    [1, 0,  0, 0,],
    [0, 1,  0, 0,],
    [0, 0,  0, 1,],
    [0, 0, -1, 0,],
])
cs_222_normals = np.array([
        [0.707107, -0.707107,         0,         0],
        [0.707107,         0, -0.707107,         0],
        [0.707107,         0,         0, -0.707107],
        [0.707107,         0,         0,  0.707107],
        [0.707107,         0,  0.707107,         0],
        [0.707107,  0.707107,         0,         0],
    ])
cs_222_vertices = np.array([
    [-0.5, -0.5, -0.5, -0.5],
    [-0.5,  0.5, -0.5, -0.5],
    [-0.5,  0.5, -0.5,  0.5],
    [-0.5,  0.5,  0.5, -0.5],
    [ 0.5, -0.5, -0.5, -0.5],
    [ 0.5,  0.5, -0.5, -0.5],
    [ 0.5,  0.5, -0.5,  0.5],
    [ 0.5,  0.5,  0.5, -0.5],
])

cs_6mmm = np.array([
     [        1,         0,         0,         0],
     [        0,  0.866025,      -0.5,         0],
     [ 0.866025,         0,         0,       0.5],
     [        0,       0.5, -0.866025,         0],
     [      0.5,         0,         0,  0.866025],
     [        0,         0,        -1,         0],
     [        0,         0,         0,         1],
     [        0,      -0.5, -0.866025,         0],
     [     -0.5,         0,         0,  0.866025],
     [        0, -0.866025,      -0.5,         0],
     [-0.866025,         0,         0,       0.5],
     [        0,        -1,         0,         0],
])
cs_6mmm_normals = np.array([
      [0.258819,         0,         0, -0.965926],
      [0.258819,         0,         0,  0.965926],
      [0.707107, -0.707107,         0,         0],
      [0.707107, -0.612372, -0.353553,         0],
      [0.707107, -0.612372,  0.353553,         0],
      [0.707107, -0.353553, -0.612372,         0],
      [0.707107, -0.353553,  0.612372,         0],
      [0.707107,         0, -0.707107,         0],
      [0.707107,         0,  0.707107,         0],
      [0.707107,  0.353553, -0.612372,         0],
      [0.707107,  0.353553,  0.612372,         0],
      [0.707107,  0.612372, -0.353553,         0],
      [0.707107,  0.612372,  0.353553,         0],
      [0.707107,  0.707107,         0,         0],
])
cs_6mmm_vertices = np.array([
    [-0.6830127, -0.6830127, -0.1830127, -0.1830127],
    [-0.6830127, -0.6830127,  0.1830127, -0.1830127],
    [-0.6830127, -0.5      , -0.5      , -0.1830127],
    [-0.6830127, -0.5      ,  0.5      , -0.1830127],
    [-0.6830127, -0.1830127, -0.6830127, -0.1830127],
    [-0.6830127, -0.1830127,  0.6830127,  0.1830127],
    [-0.6830127,  0.1830127, -0.6830127, -0.1830127],
    [-0.6830127,  0.1830127,  0.6830127, -0.1830127],
    [-0.6830127,  0.5      , -0.5      , -0.1830127],
    [-0.6830127,  0.5      ,  0.5      , -0.1830127],
    [-0.6830127,  0.6830127, -0.1830127, -0.1830127],
    [-0.6830127,  0.6830127,  0.1830127, -0.1830127],
    [ 0.6830127, -0.6830127, -0.1830127, -0.1830127],
    [ 0.6830127, -0.6830127,  0.1830127, -0.1830127],
    [ 0.6830127, -0.5      , -0.5      , -0.1830127],
    [ 0.6830127, -0.5      ,  0.5      , -0.1830127],
    [ 0.6830127, -0.1830127, -0.6830127, -0.1830127],
    [ 0.6830127, -0.1830127,  0.6830127, -0.1830127],
    [ 0.6830127,  0.1830127, -0.6830127,  0.1830127],
    [ 0.6830127,  0.1830127,  0.6830127, -0.1830127],
    [ 0.6830127,  0.5      , -0.5      , -0.1830127],
    [ 0.6830127,  0.5      ,  0.5      , -0.1830127],
    [ 0.6830127,  0.6830127, -0.1830127, -0.1830127],
    [ 0.6830127,  0.6830127,  0.1830127, -0.1830127]
])

cs_m_3 = np.array([
     [   1,    0,    0,    0],
     [ 0.5,  0.5,  0.5,  0.5],
     [-0.5,  0.5,  0.5,  0.5],
     [   0,    1,    0,    0],
     [-0.5,  0.5,  0.5, -0.5],
     [-0.5, -0.5,  0.5, -0.5],
     [   0,    0,    0,    1],
     [-0.5,  0.5, -0.5,  0.5],
     [-0.5,  0.5, -0.5, -0.5],
     [   0,    0,   -1,    0],
     [ 0.5,  0.5, -0.5, -0.5],
     [ 0.5,  0.5,  0.5, -0.5],
     [   1,    0,    0,    0],
])
cs_m_3_normals = np.array([
    [     0.5,      -0.5,      -0.5,      -0.5],
    [     0.5,      -0.5,      -0.5,       0.5],
    [     0.5,      -0.5,       0.5,      -0.5],
    [     0.5,      -0.5,       0.5,       0.5],
    [     0.5,       0.5,      -0.5,      -0.5],
    [     0.5,       0.5,      -0.5,       0.5],
    [     0.5,       0.5,       0.5,      -0.5],
    [     0.5,       0.5,       0.5,       0.5],
    [0.707107, -0.707107,         0,         0],
    [0.707107,         0, -0.707107,         0],
    [0.707107,         0,         0, -0.707107],
    [0.707107,         0,         0,  0.707107],
    [0.707107,         0,  0.707107,         0],
    [0.707107,  0.707107,         0,         0],
])
cs_m_3_vertices = np.array([
    [-0.70710678, -0.70710678,  0.        ,  0.        ],
    [-0.70710678,  0.        , -0.70710678,  0.        ],
    [-0.70710678,  0.        ,  0.        , -0.70710678],
    [-0.70710678,  0.        ,  0.        ,  0.70710678],
    [-0.70710678,  0.        ,  0.70710678,  0.        ],
    [-0.70710678,  0.70710678,  0.        ,  0.        ],
    [ 0.70710678, -0.70710678,  0.        ,  0.        ],
    [ 0.70710678,  0.        , -0.70710678,  0.        ],
    [ 0.70710678,  0.        ,  0.        , -0.70710678],
    [ 0.70710678,  0.        ,  0.        ,  0.70710678],
    [ 0.70710678,  0.        ,  0.70710678,  0.        ],
    [ 0.70710678,  0.70710678,  0.        ,  0.        ]
])

cs_432 = np.array([
    [        1,         0,         0,         0],
    [      0.5,       0.5,       0.5,       0.5],
    [     -0.5,       0.5,       0.5,       0.5],
    [        0,  0.707107,  0.707107,         0],
    [-0.707107,         0,  0.707107,         0],
    [-0.707107, -0.707107,         0,         0],
    [ 0.707107,         0,         0,  0.707107],
    [        0,  0.707107,         0,  0.707107],
    [-0.707107,  0.707107,         0,         0],
    [        0,         1,         0,         0],
    [     -0.5,       0.5,       0.5,      -0.5],
    [     -0.5,      -0.5,       0.5,      -0.5],
    [        0,         0,         0,         1],
    [     -0.5,       0.5,      -0.5,       0.5],
    [     -0.5,       0.5,      -0.5,      -0.5],
    [        0,  0.707107, -0.707107,         0],
    [        0,  0.707107,         0, -0.707107],
    [        0,         0,  0.707107, -0.707107],
    [-0.707107,         0,         0,  0.707107],
    [-0.707107,         0, -0.707107,         0],
    [        0,         0, -0.707107, -0.707107],
    [        0,         0,        -1,         0],
    [      0.5,       0.5,      -0.5,      -0.5],
    [      0.5,       0.5,       0.5,      -0.5],
])
cs_432_normals = np.array([
    [0.382683, -0.92388,        0,        0],
    [0.382683,        0, -0.92388,        0],
    [0.382683,        0,        0, -0.92388],
    [0.382683,        0,        0,  0.92388],
    [0.382683,        0,  0.92388,        0],
    [0.382683,  0.92388,        0,        0],
    [     0.5,     -0.5,     -0.5,     -0.5],
    [     0.5,     -0.5,     -0.5,      0.5],
    [     0.5,     -0.5,      0.5,     -0.5],
    [     0.5,     -0.5,      0.5,      0.5],
    [     0.5,      0.5,     -0.5,     -0.5],
    [     0.5,      0.5,     -0.5,      0.5],
    [     0.5,      0.5,      0.5,     -0.5],
    [     0.5,      0.5,      0.5,      0.5],
])
cs_432_vertices = np.array([
    [-0.85355339, -0.35355339, -0.35355339, -0.14644661],
    [-0.85355339, -0.35355339, -0.14644661,  0.35355339],
    [-0.85355339, -0.35355339,  0.14644661, -0.35355339],
    [-0.85355339, -0.35355339,  0.35355339,  0.14644661],
    [-0.85355339, -0.14644661, -0.35355339,  0.35355339],
    [-0.85355339, -0.14644661,  0.35355339,  0.35355339],
    [-0.85355339,  0.14644661, -0.35355339, -0.35355339],
    [-0.85355339,  0.14644661,  0.35355339, -0.35355339],
    [-0.85355339,  0.35355339, -0.35355339, -0.14644661],
    [-0.85355339,  0.35355339, -0.14644661,  0.35355339],
    [-0.85355339,  0.35355339,  0.14644661, -0.35355339],
    [-0.85355339,  0.35355339,  0.35355339,  0.14644661],
    [ 0.85355339, -0.35355339, -0.35355339,  0.14644661],
    [ 0.85355339, -0.35355339, -0.14644661, -0.35355339],
    [ 0.85355339, -0.35355339,  0.14644661,  0.35355339],
    [ 0.85355339, -0.35355339,  0.35355339, -0.14644661],
    [ 0.85355339, -0.14644661, -0.35355339, -0.35355339],
    [ 0.85355339, -0.14644661,  0.35355339, -0.35355339],
    [ 0.85355339,  0.14644661, -0.35355339,  0.35355339],
    [ 0.85355339,  0.14644661,  0.35355339,  0.35355339],
    [ 0.85355339,  0.35355339, -0.35355339,  0.14644661],
    [ 0.85355339,  0.35355339, -0.14644661, -0.35355339],
    [ 0.85355339,  0.35355339,  0.14644661,  0.35355339],
    [ 0.85355339,  0.35355339,  0.35355339, -0.14644661]
])


@pytest.fixture
def symmetry(request):
    return Symmetry.from_symbol(request.param)


@pytest.fixture
def normals(request):
    return Rotation(request.param)


@pytest.fixture
def vertices(request):
    return Rotation(request.param)


@pytest.mark.parametrize('symmetry, normals, vertices', [
    ('222', cs_222_normals, cs_222_vertices),
    ('6/mmm', cs_6mmm_normals, cs_6mmm_vertices),
    ('m-3', cs_m_3_normals, cs_m_3_vertices),
    ('432', cs_432_normals, cs_432_vertices),
], indirect=['symmetry', 'normals', 'vertices'])
def test_orientation_region(symmetry, normals, vertices):
    o = OrientationRegion.from_symmetry(symmetry)
    n = o.normals.numerical_sort().data
    v = o.vertices.numerical_sort().data
    assert np.allclose(n, normals.numerical_sort().data)
    assert np.allclose(v, vertices.numerical_sort().data)


@pytest.mark.parametrize('normals, vertices, face_indices', [
    (cs_222_normals, cs_222_vertices, [
        [5, 7, 6, 4],
        [2, 6, 7, 3],
        [5, 1, 3, 7],
        [2, 0, 4, 6],
        [4, 0, 1, 5],
        [3, 1, 0, 2],
    ]),
    (cs_m_3_normals, cs_m_3_vertices, [
        [23, 22, 20, 18, 16, 17, 19, 21],
        [15, 11,  7,  6, 10, 14, 22, 23],
        [13,  9,  3,  5, 11, 15, 21, 19],
        [ 4,  2,  8, 12, 18, 20, 14, 10],
        [12,  8,  0,  1,  9, 13, 17, 16],
        [ 1,  0,  2,  4,  6,  7,  5,  3],
        [21, 15, 23],
        [14, 20, 22],
        [17, 13, 19],
        [16, 18, 12],
        [11,  5,  7],
        [10,  6,  4],
        [ 9,  1,  3],
        [ 2,  0,  8],
    ]),
], indirect=['normals', 'vertices'])
def test_face_indices(normals, vertices, face_indices):
    o = OrientationRegion()
    o.normals = normals
    o.vertices = vertices
    f = o.face_indices()
    assert len(f) == len(face_indices)


